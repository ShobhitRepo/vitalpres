{
    "openapi": "3.0.3",
    "info": {
        "title": "Testified PG One API",
        "version": "1.0.0",
        "description": "Node.js server connecting to PostgreSQL with REST API and token authentication",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "ISC",
            "url": "https://opensource.org/licenses/ISC"
        }
    },
    "servers": [
        {
            "url": "{protocol}://{host}:{port}",
            "description": "API Server",
            "variables": {
                "protocol": {
                    "enum": [
                        "http",
                        "https"
                    ],
                    "default": "http"
                },
                "host": {
                    "default": "18.217.160.89"
                },
                "port": {
                    "default": "3000"
                }
            }
        },
        {
            "url": "/api",
            "description": "Relative API path"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    }
                }
            },
            "Table": {
                "type": "object",
                "properties": {
                    "table_name": {
                        "type": "string"
                    },
                    "table_schema": {
                        "type": "string"
                    }
                }
            },
            "TableStructure": {
                "type": "object",
                "properties": {
                    "column_name": {
                        "type": "string"
                    },
                    "data_type": {
                        "type": "string"
                    },
                    "is_nullable": {
                        "type": "string"
                    }
                }
            },
            "Record": {
                "type": "object",
                "description": "A generic database record",
                "additionalProperties": true
            },
            "Token": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
            },
            "Credentials": {
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Username for authentication",
                        "example": "admin"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for authentication",
                        "example": "password123"
                    }
                }
            },
            "HealthCheck": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "ok"
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Health check endpoint",
                "description": "Returns the health status of the API",
                "security": [],
                "operationId": "getHealthStatus",
                "responses": {
                    "200": {
                        "description": "Health status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheck"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate and get JWT token",
                "description": "Authenticate with username and password to get a JWT token",
                "security": [],
                "operationId": "getAuthToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JWT token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tables": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Get all tables",
                "description": "Returns a list of all tables in the patient_history schema",
                "operationId": "getAllTables",
                "responses": {
                    "200": {
                        "description": "List of tables",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Table"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tables/{tableName}/structure": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Get table structure",
                "description": "Returns the structure of a specific table",
                "operationId": "getTableStructure",
                "parameters": [
                    {
                        "name": "tableName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of the table"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Table structure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TableStructure"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tables/{tableName}": {
            "get": {
                "tags": [
                    "Records"
                ],
                "summary": "Get all records from a table",
                "description": "Returns all records from a specific table",
                "operationId": "getAllRecords",
                "parameters": [
                    {
                        "name": "tableName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of the table"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Record"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Records"
                ],
                "summary": "Create a new record",
                "description": "Creates a new record in a specific table",
                "operationId": "createRecord",
                "parameters": [
                    {
                        "name": "tableName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of the table"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Record"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Record"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tables/{tableName}/{id}": {
            "get": {
                "tags": [
                    "Records"
                ],
                "summary": "Get a specific record",
                "description": "Returns a specific record from a table by ID",
                "operationId": "getRecordById",
                "parameters": [
                    {
                        "name": "tableName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of the table"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the record"
                    },
                    {
                        "name": "idColumn",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id"
                        },
                        "description": "Name of the ID column"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Record"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Records"
                ],
                "summary": "Update a record",
                "description": "Updates a specific record in a table by ID",
                "operationId": "updateRecord",
                "parameters": [
                    {
                        "name": "tableName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of the table"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the record"
                    },
                    {
                        "name": "idColumn",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id"
                        },
                        "description": "Name of the ID column"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Record"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Record"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Records"
                ],
                "summary": "Delete a record",
                "description": "Deletes a specific record from a table by ID",
                "operationId": "deleteRecord",
                "parameters": [
                    {
                        "name": "tableName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Name of the table"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the record"
                    },
                    {
                        "name": "idColumn",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id"
                        },
                        "description": "Name of the ID column"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Record"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}